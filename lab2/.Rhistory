B0 = -5
B1 = 200
B2 = -200
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 60
omega0 = diag(c(0.5, 0.1, 0.1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# b)
# new hyper parameters
B0 = -5
B1 = 90
B2 = -90
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 60
omega0 = diag(c(0.5, 0.1, 0.1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# b)
# new hyper parameters
B0 = -5
B1 = 120
B2 = -80
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 60
omega0 = diag(c(0.5, 0.1, 0.1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# b)
# new hyper parameters
B0 = -5
B1 = 90
B2 = -100
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 60
omega0 = diag(c(0.5, 0.1, 0.1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# b)
# new hyper parameters
B0 = -5
B1 = 90
B2 = -95
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 60
omega0 = diag(c(0.5, 0.1, 0.1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# b)
# new hyper parameters
B0 = -5
B1 = 90
B2 = -90
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 60
omega0 = diag(c(0.5, 0.1, 0.1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# b)
# new hyper parameters
B0 = -5
B1 = 90
B2 = -90
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 300
omega0 = diag(c(0.5, 0.1, 0.1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# b)
# new hyper parameters
B0 = -5
B1 = 90
B2 = -95
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 100
omega0 = diag(c(0.5, 0.1, 0.1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# b)
# new hyper parameters
B0 = -5
B1 = 90
B2 = -90
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 100
omega0 = diag(c(0.5, 0.1, 0.1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# b)
# new hyper parameters
B0 = -5
B1 = 90
B2 = -90
my0 = c(B0, B1, B2)
sigma2_0 = 1
v0 = 100
omega0 = diag(c(0.5, 0.1, 0.1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# b)
# new hyper parameters
B0 = -5
B1 = 90
B2 = -90
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 100
omega0 = diag(c(0.5, 0.5, 0.5))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(data)
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot(c(0,1), c(-20, 25))
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
# simulation
nDraws = 1000
chi2 = rchisq(v0, n=nDraws)
sigma2_draws = v0*sigma2_0/chi2
omega0_inv = solve(omega0)
B_draws = matrix(0, nDraws, 3)
plot.new(xlim=c(0,1), ylim=c(-20,20))
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
plot.new(
plot.new()
plot.new()
plot.new()
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
plot(1, xlim=c(0,1), ylim=c(-20,20))
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
plot.new()
plot.window(xlim=c(0,1), ylim=c(-20,20))
print(mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[1]*omega0_inv))
for(i in 1:nDraws){
B_draws[i,] = mvrnorm(n = 1, mu = my0, Sigma=sigma2_draws[i]*omega0_inv)
lines(data$time, B_draws[i,1]+B_draws[i,2]*data$time+B_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
lines(data$time, mean(B_draws[,1])+mean(B_draws[,2])*data$time+mean(B_draws[,3])*data$time^2, col=rgb(1,0,0,1))
axis(side=1)
axis(side=2)
X = data$time
Y = data$temp
B_hat = solve(t(X)%*%X)%*%t(X)%*%Y
B_hat
X = cbind(1, data$time, I(data$time)^2)
X
head(X)
# c)
B0 = -5
B1 = 90
B2 = -90
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 100
omega0 = diag(c(0.5, 0.5, 0.5))
X = cbind(1, data$time, I(data$time)^2)
Y = data$temp
B_hat = solve(t(X)%*%X)%*%t(X)%*%Y
B_hat
curve(-10,56875+ 93.59283932*x-85.8232323*x*x)
curve(-10,56875+ 93.59283932*x-85.8232323*x^2)
curve(-10.56875+ 93.59283932*x-85.8232323*x^2)
points(data)
myn = solve((t(X)*X+omega0)) %*% (t(X)%*%X%*%B_hat + omega0 %*% my0)
Y = data$temp
B_hat = solve(t(X)%*%X)%*%t(X)%*%Y
myn = solve((t(X)*X+omega0)) %*% (t(X)%*%X%*%B_hat + omega0 %*% my0)
B_hat = solve(t(X)%*%X)%*%t(X)%*%Y
myn = solve((t(X)%*%X+omega0)) %*% (t(X)%*%X%*%B_hat + omega0 %*% my0)
myn
B_hat
# c)
B0 = -5
B1 = 100
B2 = -100
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 100
omega0 = diag(c(0.5, 0.5, 0.5))
X = cbind(1, data$time, I(data$time)^2)
Y = data$temp
B_hat = solve(t(X)%*%X)%*%t(X)%*%Y
myn = solve((t(X)%*%X+omega0)) %*% (t(X)%*%X%*%B_hat + omega0 %*% my0)
# c)
B0 = -5
B1 = 100
B2 = -100
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 100
omega0 = diag(c(0.5, 0.5, 0.5))
X = cbind(1, data$time, I(data$time)^2)
Y = data$temp
B_hat = solve(t(X)%*%X)%*%t(X)%*%Y
myn = solve((t(X)%*%X+omega0)) %*% (t(X)%*%X%*%B_hat + omega0 %*% my0)
# a)
# my0
B0 = -5 # prior knowledge: Mean temp of -5 degrees 1st of January
B1 = 60 # reasonable curve for 20 degrees in 30th of June
B2 = -60 # reasonable curve for 20 degrees in 30th of June
my0 = c(B0, B1, B2)
curve(-5+B1*x+B2*x^2)
points(data) # for comparision
-5 + 30*0.5 + 60/4
-5 + 20*0.5 + 60/4
# a)
# my0
B0 = -5 # prior knowledge: Mean temp of -5 degrees 1st of January
B1 = 20 # reasonable curve for 20 degrees in 30th of June
B2 = -60 # reasonable curve for 20 degrees in 30th of June
my0 = c(B0, B1, B2)
curve(-5+B1*x+B2*x^2)
points(data) # for comparision
# sigma0
sigma2_0 = 12.5771 # diff within 7 degress 95% of the cases, results in sigma of 7/1.96 --> sigma0 = 12.5771
# a)
# my0
B0 = -5 # prior knowledge: Mean temp of -5 degrees 1st of January
B1 = 20 # reasonable curve for 20 degrees in 30th of June
B2 = 60 # reasonable curve for 20 degrees in 30th of June
my0 = c(B0, B1, B2)
curve(-5+B1*x+B2*x^2)
points(data) # for comparision
vn = vo + dim(X)[1]
vn = v0 + dim(X)[1]
sigma2_n = (v0*sigma2_0 + t(Y)%*%Y + t(my0)%*%omega0%*%my0 - t(myn)%*%omegan%*%myn)/vn
# c)
B0 = -5
B1 = 100
B2 = -100
my0 = c(B0, B1, B2)
sigma2_0 = 2
v0 = 100
omega0 = diag(c(0.5, 0.5, 0.5))
X = cbind(1, data$time, I(data$time)^2)
Y = data$temp
B_hat = solve(t(X)%*%X)%*%t(X)%*%Y
myn = solve((t(X)%*%X+omega0)) %*% (t(X)%*%X%*%B_hat + omega0 %*% my0)
omegan = t(X)%*%X + omega0
vn = v0 + dim(X)[1]
sigma2_n = (v0*sigma2_0 + t(Y)%*%Y + t(my0)%*%omega0%*%my0 - t(myn)%*%omegan%*%myn)/vn
# Posterior draws
chi2_n = rchisq(vn, n=nDraws)
sigma2_draws = vn*sigma2_n/chi2_n
sigma2_draws2 = vn*sigma2_n/chi2_n
sigma2_draws = vn*sigma2_n
/chi2_n
sigma2_draws = vn*sigma2_n/chi2_n
sigma2_draws = vn*sigma2_n
# Posterior draws
chi2_n = rchisq(vn, n=nDraws)
sigma2_draws = vn*sigma2_n[1,1]/chi2_n
beta_draws = matrix(0, n=ndraws, 3)
beta_draws = matrix(0, ndraws, 3)
beta_draws = matrix(0, nDraws, 3)
beta_draws = matrix(0, nDraws, 3)
for (i in 1:nDraws) {
beta_draws[i,] = mvrnorm(n = 1, my = myn, Sigma = sigma2_draws[i]*omegan_inv)
}
# n
myn = solve((t(X)%*%X+omega0)) %*% (t(X)%*%X%*%B_hat + omega0 %*% my0)
omegan = t(X)%*%X + omega0
omegan_inv = solve(omegan)
vn = v0 + dim(X)[1]
sigma2_n = ((v0*sigma2_0 + t(Y)%*%Y + t(my0)%*%omega0%*%my0 - t(myn)%*%omegan%*%myn)/vn)[1,1]
# Posterior draws
chi2_n = rchisq(vn, n=nDraws)
sigma2_draws = vn*sigma2_n/chi2_n
beta_draws = matrix(0, nDraws, 3)
for (i in 1:nDraws) {
beta_draws[i,] = mvrnorm(n = 1, my = myn, Sigma = sigma2_draws[i]*omegan_inv)
}
for (i in 1:nDraws) {
beta_draws[i,] = mvrnorm(n = 1, mu = myn, Sigma = sigma2_draws[i]*omegan_inv)
}
plot(beta_draws)
plot(data)
for (i in 1:nDraws) {
beta_draws[i,] = mvrnorm(n = 1, mu = myn, Sigma = sigma2_draws[i]*omegan_inv)
lines(data$time, beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
}
for (i in 1:nDraws) {
beta_draws[i,] = mvrnorm(n = 1, mu = myn, Sigma = sigma2_draws[i]*omegan_inv)
lines(data$time, beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
posterior_y[i] = data$time, beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2
}
for (i in 1:nDraws) {
beta_draws[i,] = mvrnorm(n = 1, mu = myn, Sigma = sigma2_draws[i]*omegan_inv)
lines(data$time, beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
posterior_y[i] = beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2
}
posterior_y = numeric()
for (i in 1:nDraws) {
beta_draws[i,] = mvrnorm(n = 1, mu = myn, Sigma = sigma2_draws[i]*omegan_inv)
lines(data$time, beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
posterior_y[i] = beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2
}
posterior_y = matrix(0, nDraws, 366)
posterior_y = matrix(0, nDraws, 366)
for (i in 1:nDraws) {
beta_draws[i,] = mvrnorm(n = 1, mu = myn, Sigma = sigma2_draws[i]*omegan_inv)
lines(data$time, beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
posterior_y[i,] = beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2
}
View(posterior_y)
dim(posterior_y)
posterior_y[1,1]
plot(posterior_y)
plot(posterior_y[1,])
plot(data)
posterior_y = matrix(0, nDraws, 366)
for (i in 1:nDraws) {
beta_draws[i,] = mvrnorm(n = 1, mu = myn, Sigma = sigma2_draws[i]*omegan_inv)
lines(data$time, beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
posterior_y[i,] = beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2
}
plot(posterior_y)
plot(posterior_y[1,])
plot(posterior_y[2,])
plot(posterior_y[3,])
plot(posterior_y[4,])
plot(posterior_y[5,])
print(quantile(c(1,2,3,4,5), probs=0.25))
print(quantile(c(1,2,3,4,5), probs=0.75))
print(quantile(c(1,2,3,4,5), probs=0.85))
print(quantile(c(1,2,3,4,8), probs=0.85))
print(quantile(c(1,2,3,4,5), probs=0.85))
print(quantile(c(1,2,3,4,5), probs=0.85, type=1))
print(quantile(c(1,2,3,4,8), probs=0.85, type=1))
print(quantile(c(1,2,3,4,8), probs=0.75, type=1))
print(quantile(c(1,2,3,4,8), probs=0.8, type=1))
posterior_CI$low = apply(X = posterior_y, MARGIN=2, FUN=quantile(X, probs(0.025), type=1))
posterior_CI$low = apply(X = posterior_y, MARGIN=2, FUN=quantile(X, probs=0.025, type=1))
posterior_CI$low = apply(X = posterior_y, MARGIN=2, FUN(quantile(X, probs=0.025, type=1)))
posterior_CI$low = apply(X = posterior_y, MARGIN=2, FUN=function(quantile(X, probs=0.025, type=1))))
posterior_CI$low = apply(X = posterior_y, MARGIN=2, FUN=function(return(quantile(X, probs=0.025, type=1)))))
posterior_CI$low = apply(X = posterior_y, MARGIN=2, FUN=quantile)
posterior_CI = apply(X = posterior_y, MARGIN=2, FUN=quantile)
posterior_CI = apply(X = posterior_y, MARGIN=2, FUN=quantile(probs = 0.025))
posterior_CI = apply(X = posterior_y, MARGIN=2, FUN=quantile)
posterior_CI = apply(X = posterior_y, MARGIN=2, FUN=function(x) quantile(0.025))
posterior_CI = apply(X = posterior_y, MARGIN=2, FUN=function(x) quantile(0.025, na.rm=T))
posterior_CI = apply(X = posterior_y, MARGIN=2, FUN=function(x) quantile(x,0.025, na.rm=T))
posterior_CI = apply(X = posterior_y, MARGIN=2, FUN=function(x) quantile(x,c(0.05, 0.90), na.rm=T))
posterior_CI = apply(X = posterior_y, MARGIN=2, FUN=function(x) quantile(x,c(0.05, 0.95), na.rm=T))
View(posterior_CI)
plot(data)
lines(data$time, posterior_CI[1,])
lines(data$time, posterior_CI[2,])
plot(data)
posterior_y = matrix(0, nDraws, 366)
for (i in 1:nDraws) {
beta_draws[i,] = mvrnorm(n = 1, mu = myn, Sigma = sigma2_draws[i]*omegan_inv)
lines(data$time, beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2, col=rgb(0,0,0,0.1))
posterior_y[i,] = beta_draws[i,1] + beta_draws[i,2]*data$time + beta_draws[i,3]*data$time^2
}
posterior_CI = apply(X = posterior_y, MARGIN=2, FUN=function(x) quantile(x,c(0.05, 0.95), na.rm=T))
lines(data$time, posterior_CI[2,], col="green")
lines(data$time, posterior_CI[1,], col="green")
